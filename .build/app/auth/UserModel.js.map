{"version":3,"sources":["../../../src/app/auth/UserModel.js"],"names":["User","mongoose","Schema","constructor","UserSchema","firstName","type","String","lowercase","trim","lastName","userName","required","unique","email","validate","isEmail","passwordHash","user","timestamps","createdAt","updatedAt","plugin","UserMiddlerware","validatePassword","password","bcrypt","compareSync","createPasswordHash","hashSync","methods","model"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,IAAN,SAAmBC,kBAASC,MAA5B,CAAmC;AACjCC,EAAAA,WAAW,GAAI;AACb,UAAMC,UAAU,GAAG;AACjBC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,IAAI,EAAEC,MAAR;AAAgBC,QAAAA,SAAS,EAAE,IAA3B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OADM;AAEjBC,MAAAA,QAAQ,EAAE;AAAEJ,QAAAA,IAAI,EAAEC,MAAR;AAAgBC,QAAAA,SAAS,EAAE,IAA3B;AAAiCC,QAAAA,IAAI,EAAE;AAAvC,OAFO;AAGjBE,MAAAA,QAAQ,EAAE;AACRL,QAAAA,IAAI,EAAEC,MADE;AAERE,QAAAA,IAAI,EAAE,IAFE;AAGRG,QAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,mBAAP,CAHF;AAIRC,QAAAA,MAAM,EAAE;AAJA,OAHO;AASjBC,MAAAA,KAAK,EAAE;AACLR,QAAAA,IAAI,EAAEC,MADD;AAELE,QAAAA,IAAI,EAAE,IAFD;AAGLG,QAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,gBAAP,CAHL;AAILC,QAAAA,MAAM,EAAE,IAJH;AAKLE,QAAAA,QAAQ,EAAE,CAACC,kBAAD,EAAU,eAAV;AALL,OATU;AAgBjBC,MAAAA,YAAY,EAAE;AACZX,QAAAA,IAAI,EAAEC,MADM;AAEZK,QAAAA,QAAQ,EAAE,CAAC,IAAD,EAAO,mBAAP,CAFE;AAGZH,QAAAA,IAAI,EAAE;AAHM;AAhBG,KAAnB;AAsBA,UAAMS,IAAI,GAAG,MAAMd,UAAN,EAAkB;AAC7Be,MAAAA,UAAU,EAAE;AACVC,QAAAA,SAAS,EAAE,YADD;AAEVC,QAAAA,SAAS,EAAE;AAFD;AADiB,KAAlB,CAAb;AAMAH,IAAAA,IAAI,CAACI,MAAL,CAAYC,gCAAZ;;AACA,UAAMC,gBAAgB,GAAG,CAACC,QAAD,EAAWR,YAAX,KAA4B;AACnD,aAAOS,gBAAOC,WAAP,CAAmBF,QAAnB,EAA6BR,YAA7B,CAAP;AACD,KAFD;;AAGA,UAAMW,kBAAkB,GAAIH,QAAD,IAAc;AACvC,aAAOC,gBAAOG,QAAP,CAAgBJ,QAAhB,EAA0B,EAA1B,CAAP;AACD,KAFD;;AAGAP,IAAAA,IAAI,CAACY,OAAL,CAAaN,gBAAb,GAAgCA,gBAAhC;AACAN,IAAAA,IAAI,CAACY,OAAL,CAAaF,kBAAb,GAAkCA,kBAAlC;AACA,WAAOV,IAAP;AACD;;AAxCgC;;eA0CpBjB,kBAAS8B,KAAT,CAAe,MAAf,EAAuB,IAAI/B,IAAJ,EAAvB,C","sourcesContent":["import mongoose from 'mongoose';\nimport { isEmail } from 'validator';\nimport { UserMiddlerware } from './UserMiddlerware';\nimport bcrypt from 'bcrypt';\n\nclass User extends mongoose.Schema {\n  constructor () {\n    const UserSchema = {\n      firstName: { type: String, lowercase: true, trim: true },\n      lastName: { type: String, lowercase: true, trim: true },\n      userName: {\n        type: String,\n        trim: true,\n        required: [true, 'required username'],\n        unique: true\n      },\n      email: {\n        type: String,\n        trim: true,\n        required: [true, 'required email'],\n        unique: true,\n        validate: [isEmail, 'invalid email']\n      },\n      passwordHash: {\n        type: String,\n        required: [true, 'required password'],\n        trim: true\n      }\n    };\n    const user = super(UserSchema, {\n      timestamps: {\n        createdAt: 'created_at',\n        updatedAt: 'updated_at'\n      }\n    });\n    user.plugin(UserMiddlerware);\n    const validatePassword = (password, passwordHash) => {\n      return bcrypt.compareSync(password, passwordHash);\n    };\n    const createPasswordHash = (password) => {\n      return bcrypt.hashSync(password, 10);\n    };\n    user.methods.validatePassword = validatePassword;\n    user.methods.createPasswordHash = createPasswordHash;\n    return user;\n  }\n}\nexport default mongoose.model('User', new User());\n"],"file":"UserModel.js"}