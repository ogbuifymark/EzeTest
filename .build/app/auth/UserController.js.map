{"version":3,"sources":["../../../src/app/auth/UserController.js"],"names":["UserController","login","req","res","body","UserService","isValidUser","then","token","status","send","catch","err","error","message","register","create","search","find","result","users","update","delete"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,cAAN,CAAqB;AACnBC,EAAAA,KAAK,CAAEC,GAAF,EAAOC,GAAP,EAAY;AACf,QAAIC,IAAI,GAAGF,GAAG,CAACE,IAAf;;AACAC,yBAAYC,WAAZ,CAAwBF,IAAxB,EACGG,IADH,CACSC,KAAD,IAAWL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEF,MAAAA,KAAK,EAAEA;AAAT,KAArB,CADnB,EAEGG,KAFH,CAEUC,GAAD,IAAST,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEG,MAAAA,KAAK,EAAED,GAAG,CAACE;AAAb,KAArB,CAFlB;AAGD;;AAEDC,EAAAA,QAAQ,CAAEb,GAAF,EAAOC,GAAP,EAAY;AAClB,QAAIC,IAAI,GAAGF,GAAG,CAACE,IAAf;;AACAC,yBAAYW,MAAZ,CAAmBZ,IAAnB,EACGG,IADH,CACSC,KAAD,IAAWL,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEF,MAAAA,KAAK,EAAEA;AAAT,KAArB,CADnB,EAEGG,KAFH,CAEUC,GAAD,IAAST,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEG,MAAAA,KAAK,EAAED,GAAG,CAACE;AAAb,KAArB,CAFlB;AAGD;;AAEDG,EAAAA,MAAM,CAAEf,GAAF,EAAOC,GAAP,EAAY;AAChBE,yBAAYa,IAAZ,CAAiB,EAAjB,EACGX,IADH,CACSY,MAAD,IAAYhB,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEU,MAAAA,KAAK,EAAED;AAAT,KAArB,CADpB,EAEGR,KAFH,CAEUC,GAAD,IAAST,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEG,MAAAA,KAAK,EAAED,GAAG,CAACE;AAAb,KAArB,CAFlB;AAGD;;AAEDO,EAAAA,MAAM,GAAI,CAET;;AAEDC,EAAAA,MAAM,GAAI,CAET;;AA3BkB;;eA8BN,IAAItB,cAAJ,E","sourcesContent":["import UserService from './UserService';\n\nclass UserController {\n  login (req, res) {\n    let body = req.body;\n    UserService.isValidUser(body)\n      .then((token) => res.status(200).send({ token: token }))\n      .catch((err) => res.status(500).send({ error: err.message }));\n  }\n\n  register (req, res) {\n    let body = req.body;\n    UserService.create(body)\n      .then((token) => res.status(201).send({ token: token }))\n      .catch((err) => res.status(500).send({ error: err.message }));\n  }\n\n  search (req, res) {\n    UserService.find({})\n      .then((result) => res.status(200).send({ users: result }))\n      .catch((err) => res.status(500).send({ error: err.message }));\n  }\n\n  update () {\n\n  }\n\n  delete () {\n\n  }\n}\n\nexport default new UserController();\n"],"file":"UserController.js"}