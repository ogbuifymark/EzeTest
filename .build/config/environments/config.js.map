{"version":3,"sources":["../../../src/config/environments/config.js"],"names":["configInstace","Config","constructor","config","process","env","PORT","API_ROOT_PATH","DB_URL","JWT_TOKEN_SECRECT"],"mappings":";;;;;;AAAA,IAAIA,aAAa,GAAG,IAApB;;AAEe,MAAMC,MAAN,CAAa;AAC1BC,EAAAA,WAAW,GAAI;AACb,QAAI,CAACF,aAAL,EAAoB;AAClB,WAAKG,MAAL,GAAcC,OAAO,CAACC,GAAtB;AACAL,MAAAA,aAAa,GAAG,eAAhB;AACD;AACF;;AAES,MAANG,MAAM,CAAEE,GAAF,EAAO;AACf,SAAKC,IAAL,GAAYD,GAAG,CAACC,IAAJ,IAAY,MAAxB;AACA,SAAKC,aAAL,GAAqBF,GAAG,CAACC,IAAJ,IAAY,KAAjC;AACA,SAAKE,MAAL,GAAcH,GAAG,CAACG,MAAJ,IAAc,sCAA5B;AACA,SAAKC,iBAAL,GAAyB,IAAzB;AACD;;AAES,MAANN,MAAM,GAAI;AACZ,WAAO,IAAP;AACD;;AAjByB","sourcesContent":["let configInstace = null;\n\nexport default class Config {\n  constructor () {\n    if (!configInstace) {\n      this.config = process.env;\n      configInstace = 'ConfigInstace';\n    }\n  }\n\n  set config (env) {\n    this.PORT = env.PORT || '3000';\n    this.API_ROOT_PATH = env.PORT || 'api';\n    this.DB_URL = env.DB_URL || 'mongodb://127.0.0.1:27017/node-babel';\n    this.JWT_TOKEN_SECRECT = null;\n  }\n\n  get config () {\n    return this;\n  }\n}\n"],"file":"config.js"}