{"version":3,"sources":["../../src/config/logger.js"],"names":["loggerInstace","Logger","constructor","accessLogStream","fs","createWriteStream","path","join","process","cwd","flags","logger","stream","loggerMiddlerware","devLogger"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAIA,aAAa,GAAG,IAApB;;eACe,IAAI,MAAMC,MAAN,CAAa;AAC9BC,EAAAA,WAAW,GAAI;AACb,QAAI,CAACF,aAAL,EAAoB;AAClB,UAAIG,eAAe,GAAGC,YAAGC,iBAAH,CAAqBC,cAAKC,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,wBAAzB,CAArB,EAAyE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAzE,CAAtB;;AACA,WAAKC,MAAL,GAAc,qBAAO,UAAP,EAAmB;AAAEC,QAAAA,MAAM,EAAET;AAAV,OAAnB,CAAd;AACD;AACF;;AAEoB,MAAjBU,iBAAiB,GAAI;AACvB,WAAO,KAAKF,MAAZ;AACD;;AAEY,MAATG,SAAS,GAAI;AACf,WAAO,qBAAO,KAAP,CAAP;AACD;;AAd6B,CAAjB,E","sourcesContent":["import morgan from 'morgan';\nimport path from 'path';\nimport fs from 'fs';\n\nlet loggerInstace = null;\nexport default new class Logger {\n  constructor () {\n    if (!loggerInstace) {\n      let accessLogStream = fs.createWriteStream(path.join(process.cwd(), 'public/logs/access.log'), { flags: 'a' });\n      this.logger = morgan('combined', { stream: accessLogStream });\n    }\n  }\n\n  get loggerMiddlerware () {\n    return this.logger;\n  }\n\n  get devLogger () {\n    return morgan('dev');\n  }\n}();\n"],"file":"logger.js"}